install()
make_data_for_figure_4_10 <- function(n,
seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
u <- rbinom(n, 1, prob = .5)
s <- rbinom(n, 1, prob = plogis(-1 + 2 * u))
x <- rbinom(n, 1, prob = plogis(1 - 2 * u))
d <- rbinom(n, 1, prob = plogis(-3 + 6 * s))
y1 <- rbinom(n, 1, prob = plogis(-1 + 2 * 1 - 2 * x))
y0 <- rbinom(n, 1, prob = plogis(-1 + 2 * 0 - 2 * x))
y <- d * y1 + (1 - d) * y0
DATA <- data.table(y1, y0, y, u, s, x, d)
attr(DATA, "seed") <- seed
DATA
}
library(causalA16)
make_data_for_figure_4_10(n = 10)
calc_average_causal_effect_estimand <- function(DATA)
{
DATA[, mean(y1 - y0)]
}
make_data_for_figure_4_10 <- function(n,
seed = sample.int(.Machine$integer.max, 1))
{
set.seed(seed)
u <- rbinom(n, 1, prob = .5)
s <- rbinom(n, 1, prob = plogis(-1 + 2 * u))
x <- rbinom(n, 1, prob = plogis(1 - 2 * u))
d <- rbinom(n, 1, prob = plogis(-3 + 6 * s))
y1 <- rbinom(n, 1, prob = plogis(-1 + 2 * 1 - 2 * x))
y0 <- rbinom(n, 1, prob = plogis(-1 + 2 * 0 - 2 * x))
y <- d * y1 + (1 - d) * y0
DATA <- data.table(y1, y0, y, u, s, x, d)
attr(DATA, "seed") <- seed
DATA
}
calc_average_causal_effect_estimand <- function(DATA)
{
DATA[, mean(y1 - y0)]
}
calc_conditional_difference_in_means <- function(DATA, conditioning_variable)
{
Z <- DATA[, conditioning_variable, with = FALSE]
p_Z_1 <- DATA[, mean(Z == 1)]
p_Z_0 <- DATA[, mean(Z == 0)]
mean_y_D_1_Z_1 <- DATA[, mean(y[d == 1 & Z == 1])]
mean_y_D_1_Z_0 <- DATA[, mean(y[d == 1 & Z == 0])]
mean_y_D_0_Z_1 <- DATA[, mean(y[d == 0 & Z == 1])]
mean_y_D_0_Z_0 <- DATA[, mean(y[d == 0 & Z == 0])]
(p_Z_1 * mean_y_D_1_Z_1 + p_Z_0 * mean_y_D_1_Z_0) -
(p_Z_1 * mean_y_D_0_Z_1 + p_Z_0 * mean_y_D_0_Z_0)
}
library(devtools)
document()
build()
install()
library(causalA16)
library(ggplot2)
set.seed(8)
set.seed(8)
data_for_figure_4_10 <- make_data_for_figure_4_10(1000)
calc_average_causal_effect_estimand(data_for_figure_4_10)
?melt
library(ggplot2)
?melt
library(causalA16)
?melt
library(devtools)
document()
build()
install()
library(causalA16)
D <- simulate_simple_experiment(10)
D
?simulate
?simulate_simple_experiment
D <- simulate_simple_experiment(10)
D
D <- simulate_simple_experiment(10)
D
D <- simulate_potential_outcomes(10)
D
D <- simulate_potential_outcomes(1000)
D
D <- simulate_potential_outcomes(1000)
D
sample.int(1000, 500)
D <- simulate_potential_outcomes(1000)
treated <- sample.int(1000, 500)
control <- (1:1000)[-treated]
# control <- setdiff(1:1000, treated) # another way to do it
D[treated, y := y1]
D[control, y := y0]
set.seed(1)
D <- simulate_potential_outcomes(1000)
treated <- sample.int(1000, 500)
control <- (1:1000)[-treated]
# control <- setdiff(1:1000, treated) # another way to do it
D[treated, y := y1]
D[control, y := y0]
D[treated, mean(y)] - D[control, mean(y)]
library(causalA16)
set.seed(1)
D <- simulate_potential_outcomes(1000)
treated <- sample.int(1000, 500)
control <- (1:1000)[-treated]
# control <- setdiff(1:1000, treated) # another way to do it
D[treated, y := y1]
D[control, y := y0]
D[treated, mean(y)] - D[control, mean(y)]
library(causalA16)
set.seed(1)
D <- simulate_potential_outcomes(1000)
randomize <- function(DATA)
{
treated <- sample.int(1000, 500)
control <- (1:1000)[-treated]
# control <- setdiff(1:1000, treated) # another way to do it
DATA[treated, y := y1]
DATA[control, y := y0]
DATA[treated, mean(y)] - DATA[control, mean(y)]
}
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
randomize(D)
permutation_distribution <- replicate(1000, randomize(D))
mean(permutation_distribution)
sd(permutation_distribution)
hist(permutation_distribution)
D <- simulate_potential_outcomes(1000)
randomize <- function(DATA)
{
treated <- sample.int(1000, 500)
control <- (1:1000)[-treated]
# control <- setdiff(1:1000, treated) # another way to do it
DATA[treated, y := y1]
DATA[control, y := y0]
DATA[treated, mean(y)] - DATA[control, mean(y)]
}
permutation_distribution <- replicate(1000, randomize(D))
mean(permutation_distribution)
sd(permutation_distribution)
hist(permutation_distribution)
# needs documentation
simulate_paired_experiment <- function(n, prob_treatment = .5,
seed = sample.int(.Machine$integer.max, 1))
{
stopifnot(n %% 2 == 0)
set.seed(seed)
DATA <- simulate_potential_outcomes(n)
treated <- sample.int(n, n / 2)
control <- (1:n)[-treated]
DATA[treated, y := y1]
DATA[control, y := y0]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL)]
attr(DATA, "seed") <- seed
DATA
}
simulate_paired_experiment(n = 1000)
# needs documentation
simulate_paired_experiment <- function(n, prob_treatment = .5,
seed = sample.int(.Machine$integer.max, 1))
{
stopifnot(n %% 2 == 0)
set.seed(seed)
DATA <- simulate_potential_outcomes(n)
treated <- sample.int(n, n / 2)
control <- (1:n)[-treated]
DATA[treated, d := 1]
DATA[control, d := 0]
DATA[, y := d * y1 + (1 - d) * y0]
DATA[, `:=`(y1 = NULL, y0 = NULL)]
attr(DATA, "seed") <- seed
DATA
}
simulate_paired_experiment(1000)
experiment <- simulate_paired_experiment(1000)
experiment[, .N, .(d, y)]
randomize(experiment)
experiment[, y1 := y]
experiment[, y0 := y]
randomize(experiment)
randomize(experiment)
randomize(experiment)
randomize(experiment)
randomize(experiment)
library(devtools)
document()
build()
install()
library(causalA16)
library(causalA16)
senate_roll-rates <- SenateRollRates.RData
house_nominate <- house.csv
library(causalA16)
house_nominate <- read.csv("house.csv")
house_nominate <- read.csv("inst/extdata/house.csv")
View(house_nominate)
library(readxls)
?read.dta
?foreign::read.dta
library(foreign)
house_nominate <- read.xls("inst/extdata/hl01113d21_BSSE_12.dta")
house_nominate <- read.dta("inst/extdata/hl01113d21_BSSE_12.dta")
load("~/GitHub/Quant3/causalA16/inst/extdata/Chap6 - AllRolls.RData")
View(x)
load("~/GitHub/Quant3/causalA16/inst/extdata/AllRolls(1).RData")
View(x)
load("~/GitHub/Quant3/causalA16/inst/extdata/rollrates45-105.RData")
load("~/GitHub/Quant3/causalA16/inst/extdata/ch10rollrates45-105.RData")
View(x)
library(causalA16)
library(foreign)
library(data.table)
house_nominate <- read.dta("inst/extdata/hl01113d21_BSSE_12.dta")
setDT(house_nominate)
house_year_data <- house_nominate[, list(party_median = median(dwnom1),
party_median2 = median(dwnom2)), by = list(cong, party)]
house_median <- house_nominate[, list(floor_median = median(dwnom1),
floor_median2 = median(dwnom2)), by = cong]
# house_roll_rate <- load("inst/extdata/rollrates45-105.RData")
# write.dta(x, "inst/extdata/house_roll_rate.dta")
house_roll_rate <- read.dta("inst/extdata/house_roll_rate.dta")
setDT(house_roll_rate)
house_roll_rate[, minority == 0]
View(house_roll_rate)
house_majority_roll_rate <- subset(house_roll_rate, minority == 0)
View(house_majority_roll_rate)
house_majority_roll_rate$party <- abs(house_majority_roll_rate - 1)
house_majority_roll_rate$party <- abs(house_majority_roll_rate$party - 1)
house_majority_roll_rate <- subset(house_roll_rate, minority == 0)
house_majority_roll_rate$party <- abs(house_majority_roll_rate$party - 1)
house_minority_roll_rate <- subset(house_roll_rate, minority == 1)
house_minority_roll_rate$party <- abs(house_roll_rate$party - 1)
write.dta(house_majority_roll_rate, "data/house_majority_roll_rate.dta")
write.dta(house_minority_roll_rate, "house_minority_roll_rate.dta")
write.dta(house_minority_roll_rate, "data/house_minority_roll_rate.dta")
library(causalA16)
library(data.table)
library(texreg)
library(foreign)
house_majority_roll_rate <- read.dta("data/house_majority_roll_rate.dta")
house_minority_roll_rate <- read.dta("data/house_minority_roll_rate.dta")
View(house_majority_roll_rate)
formula_1 <- rrate ~ dwdist
formula_2 <- rrate ~ dwdist + numfpvs
formula_3 <- rrate ~ dwdist + numfpvs + lagrrate
formula_4 <- rrate ~ dwdist + lagrrate + lag2rr
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate)
lm(formula_2, house_majority_roll_rate)
lm(formula_3, house_majority_roll_rate)
lm(formula_4, house_majority_roll_rate)
))
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)
))
library(causalA16)
library(foreign)
library(data.table)
library(texreg)
# load data
house_majority_roll_rate <- read.dta("data/house_majority_roll_rate.dta")
house_minority_roll_rate <- read.dta("data/house_minority_roll_rate.dta")
formula_1 <- rrate ~ dwdist
formula_2 <- rrate ~ dwdist + numfpvs
formula_3 <- rrate ~ dwdist + numfpvs + lagrrate
formula_4 <- rrate ~ dwdist + lagrrate + lag2rr
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)
))
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 3
)
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
texreg::screenreg(list(
lm(formula_1, house_minority_roll_rate),
lm(formula_2, house_minority_roll_rate),
lm(formula_3, house_minority_roll_rate),
lm(formula_4, house_minority_roll_rate)),
digits = 4
)
house_majority_roll_rate <- subset(house_roll_rate, minority == 0)
house_roll_rate <- read.dta("inst/extdata/house_roll_rate.dta")
house_majority_roll_rate <- subset(house_roll_rate, minority == 0)
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
house_majority_roll_rate$party <- abs(house_majority_roll_rate$party - 1)
write.dta(house_majority_roll_rate, "data/house_majority_roll_rate.dta")
house_majority_roll_rate <- read.dta("data/house_majority_roll_rate.dta")
house_minority_roll_rate <- read.dta("data/house_minority_roll_rate.dta")
formula_1 <- rrate ~ dwdist
formula_2 <- rrate ~ dwdist + numfpvs
formula_3 <- rrate ~ dwdist + numfpvs + lagrrate
formula_4 <- rrate ~ dwdist + lagrrate + lag2rr
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
summary(house_majority_roll_rate$dwdist)
summary(house_majority_roll_rate$dwdist2)
formula_1 <- rrate ~ dwdist2
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
formula_1 <- rrate ~ dwdist
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
texreg::texreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
texreg::texreg(list(
lm(formula_1, house_minority_roll_rate),
lm(formula_2, house_minority_roll_rate),
lm(formula_3, house_minority_roll_rate),
lm(formula_4, house_minority_roll_rate)),
digits = 4
)
library(causalA16)
library(foreign)
library(data.table)
library(texreg)
house_roll_rate <- read.dta("inst/extdata/house_roll_rate.dta")
formula_1 <- rrate ~ dwdist
formula_2 <- rrate ~ dwdist + numfpvs
formula_3 <- rrate ~ dwdist + numfpvs + lagrrate
formula_4 <- rrate ~ dwdist + lagrrate + lag2rr
texreg::screenreg(list(
lm(formula_1, house_minority_roll_rate),
lm(formula_2, house_minority_roll_rate),
lm(formula_3, house_minority_roll_rate),
lm(formula_4, house_minority_roll_rate)),
digits = 4
)
texreg::screenreg(list(
lm(formula_1, house_roll_rate),
lm(formula_2, house_roll_rate),
lm(formula_3, house_roll_rate),
lm(formula_4, house_roll_rate)),
digits = 4
)
texreg::screenreg(list(
lm(formula_1, house_roll_rate[minority == 0]),
lm(formula_2, house_roll_rate[minority == 0]),
lm(formula_3, house_roll_rate[minority == 0]),
lm(formula_4, house_roll_rate[minority == 0])),
digits = 4
)
texreg::screenreg(list(
lm(formula_1, house_roll_rate[house_roll_rate$minority == 0]),
lm(formula_2, house_roll_rate[house_roll_rate$minority == 0]),
lm(formula_3, house_roll_rate[house_roll_rate$minority == 0]),
lm(formula_4, house_roll_rate[house_roll_rate$minority == 0])),
digits = 4
)
View(house_roll_rate)
lm5 <- lm(formula_1, house_roll_rate[house_roll_rate$minority == 0])
formula_1 <- rrate ~ dwdist
formula_2 <- rrate ~ dwdist + numfpvs
formula_3 <- rrate ~ dwdist + numfpvs + lagrrate
formula_4 <- rrate ~ dwdist + lagrrate + lag2rr
library(causalA16)
library(foreign)
library(data.table)
library(texreg)
house_roll_rate <- read.dta("inst/extdata/house_roll_rate.dta")
texreg::screenreg(list(
lm(formula_1, house_roll_rate),
lm(formula_2, house_roll_rate),
lm(formula_3, house_roll_rate),
lm(formula_4, house_roll_rate)),
digits = 4
)
texreg::screenreg(list(
lm(formula_1, house_roll_rate[minority == 1]),
lm(formula_2, house_roll_rate[minority == 1]),
lm(formula_3, house_roll_rate),
lm(formula_4, house_roll_rate)),
digits = 4
)
setDT(house_roll_rate)
texreg::screenreg(list(
lm(formula_1, house_roll_rate[minority == 1]),
lm(formula_2, house_roll_rate[minority == 1]),
lm(formula_3, house_roll_rate[minority == 1]),
lm(formula_4, house_roll_rate[minority == 1])),
digits = 4
)
"2 + 2" <- 5
2 + 2
"2 + 2"
"2 + 2" = 5
print("2 + 2")
library(causalA16)
library(foreign)
library(data.table)
library(texreg)
# load data
house_majority_roll_rate <- read.dta("data/house_majority_roll_rate.dta")
house_minority_roll_rate <- read.dta("data/house_minority_roll_rate.dta")
# define formulas for table 2 and 3
formula_1 <- rrate ~ dwdist
formula_2 <- rrate ~ dwdist + numfpvs
formula_3 <- rrate ~ dwdist + numfpvs + lagrrate
formula_4 <- rrate ~ dwdist + lagrrate + lag2rr
# run and view tables 2 and 3
texreg::screenreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
texreg::screenreg(list(
lm(formula_1, house_minority_roll_rate),
lm(formula_2, house_minority_roll_rate),
lm(formula_3, house_minority_roll_rate),
lm(formula_4, house_minority_roll_rate)),
digits = 4
)
# get LaTeX code for tables 2 and 3
texreg::texreg(list(
lm(formula_1, house_majority_roll_rate),
lm(formula_2, house_majority_roll_rate),
lm(formula_3, house_majority_roll_rate),
lm(formula_4, house_majority_roll_rate)),
digits = 4
)
texreg::texreg(list(
lm(formula_1, house_minority_roll_rate),
lm(formula_2, house_minority_roll_rate),
lm(formula_3, house_minority_roll_rate),
lm(formula_4, house_minority_roll_rate)),
digits = 4
)
library(causalA16)
library(foreign)
library(data.table)
house_roll_rate <- read.dta("inst/extdata/house_roll_rate.dta")
summary(house_roll_rate$dwdist)
house_roll_rate <- na.omit(house_roll_rate)
summary(house_roll_rate$dwdist)
house_roll_rate <- read.dta("inst/extdata/house_roll_rate.dta")
hist(house_roll_rate$dwdist)
?hist
hist(house_roll_rate$dwdist, breaks = 20)
hist(house_roll_rate$dwdist, breaks = 50)
hist(house_roll_rate$dwdist, breaks = 200)
hist(house_roll_rate$dwdist, breaks = 2000)
a <- 5
